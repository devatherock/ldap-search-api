docker_auth: &docker_auth
  auth:
    username: $DOCKER_USERNAME
    password: $DOCKER_PASSWORD
        
docker_executor_image: &docker_executor_image
  docker:
    - image: cimg/openjdk:17.0.11
      <<: *docker_auth

vm_executor_image: &vm_executor_image
  machine:
    image: ubuntu-2204:2023.04.2

work_directory: &work_directory
  working_directory: ~/ldap-search-api

resource_class: &resource_class
  resource_class: small
  
release_filter: &release_filter
  filters:
    branches:
      only: non-existent-branch
    tags:
      only: /^v[0-9\.]+$/
      
pr_filter: &pr_filter
  filters:
    branches:
      ignore: master

orbs:
  templates: devatherock/circleci-templates@0.7.0

parameters:
  repo_name:
    type: string
    default: "ldap-search-api"        
  
executors:
  jdk-executor:
    docker:
      - image: devatherock/graalvm:ol8-java17-22.1.0-5
        <<: *docker_auth
    <<: *resource_class
    <<: *work_directory
    environment:
      # To generate swagger UI
      JAVA_TOOL_OPTIONS: '-Dmicronaut.openapi.views.spec=swagger-ui.enabled=true,swagger-ui.theme=flattop'
  docker-executor:
    <<: *docker_executor_image
    <<: *resource_class
    <<: *work_directory
  native-image-executor:
    <<: *docker_executor_image
    resource_class: medium
    <<: *work_directory
  arm-native-image-executor:
    <<: *docker_executor_image
    resource_class: arm.medium
    <<: *work_directory    
  machine-executor:
    <<: *vm_executor_image
    resource_class: medium
    <<: *work_directory
  arm-executor:
    <<: *vm_executor_image
    resource_class: arm.medium
    <<: *work_directory

version: 2.1
jobs:
  test:
    executor: jdk-executor
    steps:
      - checkout
      - attach_workspace:
          at: ~/ldap-search-api
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies
      - run: |
          ./gradlew check sonar -Dsonar.token=$SONAR_TOKEN -Dgraalvm=true
      - store_artifacts:
          path: build/reports
      - store_test_results:
          path: build/test-results

  build:
    executor: jdk-executor
    steps:
      - checkout
      - attach_workspace:
          at: ~/ldap-search-api
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies
      - run: |
          ./gradlew build coveralls sonar -Dsonar.token=$SONAR_TOKEN -Dgraalvm=true
      - persist_to_workspace:
          root: ~/ldap-search-api
          paths:
            - build
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}
      - store_artifacts:
          path: build/reports
      - store_test_results:
          path: build/test-results
          
  publish:
    parameters:
      runner:
        type: executor
      tag_suffix:
        type: string  
    executor: << parameters.runner >>
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: ~/ldap-search-api
      - run: |
          TAG=${CIRCLE_SHA1:0:8}-<< parameters.tag_suffix >>
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker build \
            -t devatherock/ldap-search-api:$TAG \
            -t devatherock/ldap-search-api:<< parameters.tag_suffix >> .
          docker image push --all-tags devatherock/ldap-search-api

  integration_test:
    parameters:
      runner:
        type: executor
    executor: << parameters.runner >>
    steps:
      - checkout
      - attach_workspace:
          at: ~/ldap-search-api
      - restore_cache:
          keys:
            - v1-integration-{{ checksum "build.gradle" }}
            - v1-integration
      - run: |
          make integration-test remote-integration-test
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-integration-{{ checksum "build.gradle" }}
      - store_test_results:
          path: build/test-results

  publish_release:
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: ~/ldap-search-api
      - run: |
          TAG=${CIRCLE_TAG#v}
          DEV_TAG=${CIRCLE_SHA1:0:8}
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker buildx create --name rockbuilder \
            --driver docker-container --use --bootstrap
          docker buildx imagetools create \
            -t devatherock/<< pipeline.parameters.repo_name >>:$TAG \
            devatherock/<< pipeline.parameters.repo_name >>:$DEV_TAG

workflows:
  version: 2.1
  build_publish:
    jobs:
      - templates/slack:
          name: notify
          context:
            - docker-credentials
            - slack-webhook
          filters:
            branches:
              only: master    
      - templates/yaml_validator:
          name: validate_yamls
          context:
            - docker-credentials
          work_dir: '~/<< pipeline.parameters.repo_name >>'
          requires:
            - notify
      - build:
          context:
            - docker-credentials
            - sonar-credentials
            - jumpcloud-credentials
          requires:
            - validate_yamls
      - publish:
          context:
            - docker-credentials
          runner: native-image-executor
          tag_suffix: amd64
          requires:
            - build
      - publish:
          name: publish_arm
          context:
            - docker-credentials
          runner: arm-native-image-executor
          tag_suffix: arm64  
          requires:
            - build
      - templates/image_merge:
          name: publish_multi_arch
          context:
            - docker-credentials
          docker_image: '<< pipeline.parameters.repo_name >>'
          requires:
            - publish
            - publish_arm
      - templates/dockerhub_readme_update:
          name: dockerhub_readme
          context:
            - docker-credentials
            - dockerhub-readme-credentials
          docker_image: '<< pipeline.parameters.repo_name >>'
          image_description: 'Simple REST API to query a LDAP server'
          work_dir: '~/<< pipeline.parameters.repo_name >>'
          requires:
            - publish_multi_arch
      - integration_test:
          name: integration_test_amd
          context:
            - docker-credentials
            - jumpcloud-credentials
          runner: machine-executor
          requires:
            - publish_multi_arch
      - integration_test:
          name: integration_test_arm
          context:
            - docker-credentials
            - jumpcloud-credentials
          runner: arm-executor
          requires:
            - dockerhub_readme
  
  release:
    jobs:
      - templates/slack:
          name: notify
          context:
            - docker-credentials
            - slack-webhook
          <<: *release_filter    
      - publish_release:
          context:
            - docker-credentials
          <<: *release_filter
          requires:
            - notify

  pr_check:
    jobs:
      - templates/changelog_updater:
          name: changelog_updater
          context:
            - docker-credentials
            - changelog-updater-credentials
          <<: *pr_filter
      - templates/yaml_validator:
          name: validate_yamls
          context:
            - docker-credentials
          work_dir: '~/<< pipeline.parameters.repo_name >>'            
          requires:
            - changelog_updater
      - test:
          context:
            - docker-credentials
            - sonar-credentials
            - jumpcloud-credentials
          <<: *pr_filter
          requires:
            - validate_yamls