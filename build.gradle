plugins {
    id("groovy")
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "2.0.8"
    id 'jacoco'
    id 'org.sonarqube' version '4.0.0.2929'
    id 'com.github.kt3k.coveralls' version '2.12.2'
    id 'com.diffplug.spotless' version '6.18.0'
    id 'org.owasp.dependencycheck' version '8.2.1'
}

version = "0.4.0"
group = "io.github.devatherock"

repositories {
    mavenCentral()
}

micronaut {
    runtime("netty")
    testRuntime("spock2")
    processing {
        incremental(true)
        annotations("io.github.devatherock.ldapsearch.*")
    }
}

dependencies {
    def lombokVersion = '1.18.16'

    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombokVersion
    annotationProcessor("io.micronaut.openapi:micronaut-openapi")

    compileOnly group: 'org.projectlombok', name: 'lombok', version: lombokVersion
    compileOnly group: 'com.google.code.findbugs', name: 'annotations', version: '3.0.1'
    compileOnly("org.graalvm.nativeimage:svm")

    implementation("io.micronaut:micronaut-validation")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.swagger.core.v3:swagger-annotations")
    implementation("io.micronaut:micronaut-management")
    implementation("io.micronaut.micrometer:micronaut-micrometer-core")

    implementation group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '7.2'
    implementation group: 'javax.inject', name: 'javax.inject', version: '1'

    runtimeOnly("ch.qos.logback:logback-classic")

    testImplementation group: 'com.unboundid', name: 'unboundid-ldapsdk', version: '6.0.8'
    testImplementation group: 'io.micronaut', name: 'micronaut-http-client'
    testImplementation group: 'org.codehaus.groovy', name: 'groovy-json', version: '3.0.17'
}

application {
    mainClass.set("io.github.devatherock.ldapsearch.Application")
}

java {
    sourceCompatibility = JavaVersion.toVersion("1.8")
    targetCompatibility = JavaVersion.toVersion("1.8")
}

test {
    if (Boolean.getBoolean('graalvm')) {
        jvmArgs("-agentlib:native-image-agent=config-output-dir=$projectDir/src/main/graal")
    }
}

run {
    systemProperties(System.properties)
}

ext.jacoco = [
    exclusions: [
        'io/github/devatherock/ldapsearch/Application.class',
        // TODO Remove exclusions once tests have been written
        'io/github/devatherock/ldapsearch/config/LdapProperties*',
        'io/github/devatherock/ldapsearch/config/ObjectMapperBeanEventListener.class',
        'io/github/devatherock/ldapsearch/service/LdapSearchService.class'
    ]
]

apply from: 'https://raw.githubusercontent.com/devatherock/gradle-includes/master/integration.gradle'
apply from: 'https://raw.githubusercontent.com/devatherock/gradle-includes/master/checks.gradle'